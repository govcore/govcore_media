<?php

/**
 * @file
 * Adds support for locally-hosted audio files as media items.
 */

use Drupal\govcore_core\OverrideHelper as Override;
use Drupal\govcore_media_audio\Plugin\media\Source\AudioFile;
use Drupal\govcore_media_image\Plugin\media\Source\Image;

/**
 * Implements hook_field_widget_info_alter().
 */
function govcore_media_audio_field_widget_info_alter(array &$info) {
  if (isset($info['image_widget_crop'])) {
    // We cannot import the class with a use statement, because it will blow up
    // if Image Widget Crop is not installed.
    Override::pluginClass($info['image_widget_crop'], '\Drupal\govcore_media_image\Plugin\Field\FieldWidget\ImageCropWidget');
  }
}


/**
 * Implements hook_modules_installed().
 */
function govcore_media_audio_modules_installed(array $modules) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  if (in_array('image_widget_crop', $modules)) {
    Config::forModule('govcore_media_audio')
      ->optional()
      ->getEntity('crop_type', 'one_one')
      ->save();
  }
}

/**
 * Implements hook_media_source_info_alter().
 */
function govcore_media_audio_media_source_info_alter(array &$sources) {
  $sources['image']['input_match']['field_types'] = ['file'];
  Override::pluginClass($sources['file'], AudioFile::class);
  $sources['image']['input_match']['field_types'] = ['image'];
  Override::pluginClass($sources['image'], Image::class);

  // When a media item that uses the Image plugin is embedded in a text editor,
  // prefer the media_image display plugin.
  // @see \Drupal\govcore_media\Form\EntityEmbedDialog::buildEmbedStep()
  $sources['image']['entity_embed_display'] = 'media_image';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function govcore_media_audio_form_entity_browser_image_browser_form_alter(array &$form, FormStateInterface $form_state) {
  $form['#attached']['library'][] = 'govcore_media/browser.styling';
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function govcore_media_audio_entity_form_display_presave(EntityFormDisplayInterface $display) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  // Since the image browser integrates with the media library, it doesn't make
  // sense to use the image browser when creating or editing an image media
  // entity.
  if ($display->getTargetEntityTypeId() == 'media' && $display->getTargetBundle() == 'file') {
    return;
  }

  $filter = function (FieldStorageDefinitionInterface $field) {
    return $field->getType() == 'file';
  };
  $new_components = \Drupal::service('govcore.display_helper')
    ->getNewFields($display, $filter);

  foreach ($new_components as $key => $component) {
    $display->setComponent($key, [
      'type' => 'entity_browser',
      'weight' => $component['weight'],
      'settings' => [
        'entity_browser' => 'audio_browser',
        'field_widget_edit' => TRUE,
        'field_widget_remove' => TRUE,
        'view_mode' => 'default',
        'preview_image_style' => 'crop_one_one_thumb',
        'open' => TRUE,
      ],
      'region' => 'content',
    ]);
  }
}
