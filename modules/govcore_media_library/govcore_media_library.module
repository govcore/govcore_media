<?php

/**
 * @file
 * The module file for govcore_media_library.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Views;


/**
 * Implements hook_preprocess_views_view().
 */
function govcore_media_library_preprocess_views_view(&$variables) {
  $views = Views::getApplicableViews('entity_browser_display');
  foreach ($views as $view_id => $view) {
    foreach ($view as $display_id => $display) {
      $browser = 'media_browser_media_library_';
      $filter = strpos($display, $browser);
      if ($filter !== false) {
        $browser_views = array();
        if (!empty($display)) {
          $browser_views[] = $display;
        }
        if (in_array($variables['view']->id(), $browser_views)) {
          $variables['view_array']['#attached']['library'][] = 'media_library/view';
          $variables['view_array']['#attached']['library'][] = 'media_entity_browser_media_library/view';
        }
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function govcore_media_library_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'views_exposed_form') {
    $views = Views::getApplicableViews('entity_browser_display');
    foreach ($views as $view_id => $view) {
      foreach ($view as $display_id => $display) {
        $browser = 'media_browser_media_library_';
        $filter = strpos($display, $browser);
        if ($filter !== false) {
          $browser_views = array();
          if (!empty($display)) {
            $browser_views[] = $display;
          }
          $view = $form_state->get('view');
          // Add after build to fix views exposed filter's submit button.
          if (in_array($view, $browser_views)) {
            $form['#after_build'][] = '_media_library_views_form_media_library_after_build';
          }
        }
      }
    }
  }
}
